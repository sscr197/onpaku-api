name: Deploy to Cloud Run

env:
  SERVICE_NAME: onpaku-api
  PROJECT_ID: onpaku
  REGION: asia-northeast1
  DOCKER_IMAGE_URL: asia-northeast1-docker.pkg.dev/onpaku/api/onpaku-api
  APP_NAME: onpaku-api
  FIRESTORE_DATABASE_ID: onpaku-db
  FIREBASE_DATABASE_URL: https://onpaku.firebaseio.com

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test
        env:
          NODE_ENV: test

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          NODE_ENV: test
          PORT: 3000
          API_KEY: ${{ secrets.API_KEY }}
          FIRESTORE_PROJECT_ID: ${{ env.PROJECT_ID }}
          APP_NAME: ${{ env.APP_NAME }}
          FIRESTORE_CLIENT_EMAIL: ${{ secrets.FIRESTORE_CLIENT_EMAIL }}
          FIRESTORE_PRIVATE_KEY: ${{ secrets.FIRESTORE_PRIVATE_KEY }}
          FIRESTORE_DATABASE_ID: ${{ env.FIRESTORE_DATABASE_ID }}

      - name: Google Cloud Auth
        if: github.ref == 'refs/heads/main'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        if: github.ref == 'refs/heads/main'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        if: github.ref == 'refs/heads/main'
        run: |
          gcloud auth configure-docker asia-northeast1-docker.pkg.dev

      - name: Build and Push Docker Image
        if: github.ref == 'refs/heads/main'
        run: |
          docker build \
            --build-arg NODE_ENV=production \
            --build-arg FIRESTORE_PROJECT_ID=${{ env.PROJECT_ID }} \
            --build-arg FIRESTORE_CLIENT_EMAIL=${{ secrets.FIRESTORE_CLIENT_EMAIL }} \
            --build-arg FIRESTORE_PRIVATE_KEY='${{ secrets.FIRESTORE_PRIVATE_KEY }}' \
            --build-arg FIRESTORE_DATABASE_ID='${{ env.FIRESTORE_DATABASE_ID }}' \
            --build-arg FIREBASE_DATABASE_URL='${{ env.FIREBASE_DATABASE_URL }}' \
            --build-arg API_KEY=${{ secrets.API_KEY }} \
            --build-arg APP_NAME=${{ env.APP_NAME }} \
            -t ${{ env.DOCKER_IMAGE_URL }}:${{ github.sha }} \
            -t ${{ env.DOCKER_IMAGE_URL }}:latest .
          docker push ${{ env.DOCKER_IMAGE_URL }}:${{ github.sha }}
          docker push ${{ env.DOCKER_IMAGE_URL }}:latest

      - name: Deploy to Cloud Run
        if: github.ref == 'refs/heads/main'
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.DOCKER_IMAGE_URL }}:${{ github.sha }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --set-env-vars="NODE_ENV=production" \
            --set-env-vars="FIRESTORE_PROJECT_ID=${{ env.PROJECT_ID }}" \
            --set-env-vars="FIRESTORE_CLIENT_EMAIL=${{ secrets.FIRESTORE_CLIENT_EMAIL }}" \
            --set-env-vars="FIRESTORE_PRIVATE_KEY=${{ secrets.FIRESTORE_PRIVATE_KEY }}" \
            --set-env-vars="FIRESTORE_DATABASE_ID=${{ env.FIRESTORE_DATABASE_ID }}" \
            --set-env-vars="FIREBASE_DATABASE_URL=${{ env.FIREBASE_DATABASE_URL }}" \
            --set-env-vars="API_KEY=${{ secrets.API_KEY }}" \
            --set-env-vars="APP_NAME=${{ env.APP_NAME }}"
